{"version":3,"file":"frappe-planning-gantt.min.js","sources":["../src/svg_utils.js","../src/arrow.js","../src/date_utils.js","../src/bar.js","../src/popup.js","../src/index.js"],"sourcesContent":["export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        const end_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            const down_1 = this.gantt.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\r\n            month: 'long'\r\n        });\r\n        const month_name = dateTimeFormat.format(date);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: month_name_capitalized,\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","import date_utils from \"./date_utils\";\r\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\r\n\r\nexport default class Bar {\r\n  constructor(gantt, task, options) {\r\n    this.options = { enable_labels: true, ...(options ?? {}) };\r\n    this.set_defaults(gantt, task);\r\n    this.prepare();\r\n    this.draw();\r\n    this.bind();\r\n  }\r\n\r\n  set_defaults(gantt, task) {\r\n    this.action_completed = false;\r\n    this.gantt = gantt;\r\n    this.task = task;\r\n  }\r\n\r\n  prepare() {\r\n    this.prepare_values();\r\n    this.prepare_helpers();\r\n  }\r\n\r\n  prepare_values() {\r\n    this.invalid = this.task.invalid;\r\n    this.height = this.gantt.options.bar_height;\r\n    this.x = this.compute_x();\r\n    this.y = this.compute_y();\r\n    this.corner_radius = this.gantt.options.bar_corner_radius;\r\n    this.duration =\r\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\r\n      this.gantt.options.step;\r\n    this.width = this.gantt.options.column_width * this.duration;\r\n    this.progress_width =\r\n      this.gantt.options.column_width *\r\n        this.duration *\r\n        (this.task.progress / 100) || 0;\r\n    this.group = createSVG(\"g\", {\r\n      class: \"bar-wrapper \" + (this.task.custom_class || \"\"),\r\n      \"data-id\": this.task.id,\r\n    });\r\n    this.bar_group = createSVG(\"g\", {\r\n      class: \"bar-group\",\r\n      append_to: this.group,\r\n    });\r\n    this.handle_group = createSVG(\"g\", {\r\n      class: \"handle-group\",\r\n      append_to: this.group,\r\n    });\r\n  }\r\n\r\n  prepare_helpers() {\r\n    SVGElement.prototype.getX = function () {\r\n      return +this.getAttribute(\"x\");\r\n    };\r\n    SVGElement.prototype.getY = function () {\r\n      return +this.getAttribute(\"y\");\r\n    };\r\n    SVGElement.prototype.getWidth = function () {\r\n      return +this.getAttribute(\"width\");\r\n    };\r\n    SVGElement.prototype.getHeight = function () {\r\n      return +this.getAttribute(\"height\");\r\n    };\r\n    SVGElement.prototype.getEndX = function () {\r\n      return this.getX() + this.getWidth();\r\n    };\r\n  }\r\n\r\n  draw() {\r\n    this.draw_bar();\r\n    this.draw_progress_bar();\r\n    if (this.options.enable_labels) {\r\n      this.draw_label();\r\n    }\r\n    this.draw_resize_handles();\r\n  }\r\n\r\n  draw_bar() {\r\n    this.$bar = createSVG(\"rect\", {\r\n      x: this.x,\r\n      y: this.y,\r\n      width: this.width,\r\n      height: this.height,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"bar\",\r\n      append_to: this.bar_group,\r\n    });\r\n\r\n    animateSVG(this.$bar, \"width\", 0, this.width);\r\n\r\n    if (this.invalid) {\r\n      this.$bar.classList.add(\"bar-invalid\");\r\n    }\r\n  }\r\n\r\n  draw_progress_bar() {\r\n    if (this.invalid) return;\r\n    this.$bar_progress = createSVG(\"rect\", {\r\n      x: this.x,\r\n      y: this.y,\r\n      width: this.progress_width,\r\n      height: this.height,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"bar-progress\",\r\n      append_to: this.bar_group,\r\n    });\r\n\r\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\r\n  }\r\n\r\n  draw_label() {\r\n    createSVG(\"text\", {\r\n      x: this.x + this.width / 2,\r\n      y: this.y + this.height / 2,\r\n      innerHTML: this.task.name,\r\n      class: \"bar-label\",\r\n      append_to: this.bar_group,\r\n    });\r\n    // labels get BBox in the next tick\r\n    requestAnimationFrame(() => this.update_label_position());\r\n  }\r\n\r\n  draw_resize_handles() {\r\n    if (this.invalid) return;\r\n\r\n    const bar = this.$bar;\r\n    const handle_width = 8;\r\n\r\n    createSVG(\"rect\", {\r\n      x: bar.getX() + bar.getWidth() - 9,\r\n      y: bar.getY() + 1,\r\n      width: handle_width,\r\n      height: this.height - 2,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"handle right\",\r\n      append_to: this.handle_group,\r\n    });\r\n\r\n    createSVG(\"rect\", {\r\n      x: bar.getX() + 1,\r\n      y: bar.getY() + 1,\r\n      width: handle_width,\r\n      height: this.height - 2,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"handle left\",\r\n      append_to: this.handle_group,\r\n    });\r\n\r\n    if (this.task.progress && this.task.progress < 100) {\r\n      this.$handle_progress = createSVG(\"polygon\", {\r\n        points: this.get_progress_polygon_points().join(\",\"),\r\n        class: \"handle progress\",\r\n        append_to: this.handle_group,\r\n      });\r\n    }\r\n  }\r\n\r\n  get_progress_polygon_points() {\r\n    const bar_progress = this.$bar_progress;\r\n    return [\r\n      bar_progress.getEndX() - 5,\r\n      bar_progress.getY() + bar_progress.getHeight(),\r\n      bar_progress.getEndX() + 5,\r\n      bar_progress.getY() + bar_progress.getHeight(),\r\n      bar_progress.getEndX(),\r\n      bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n    ];\r\n  }\r\n\r\n  bind() {\r\n    if (this.invalid) return;\r\n    this.setup_click_event();\r\n  }\r\n\r\n  setup_click_event() {\r\n    $.on(this.group, \"focus \" + this.gantt.options.popup_trigger, (e) => {\r\n      if (this.action_completed) {\r\n        // just finished a move action, wait for a few seconds\r\n        return;\r\n      }\r\n\r\n      this.show_popup();\r\n      this.gantt.unselect_all();\r\n      this.group.classList.add(\"active\");\r\n    });\r\n\r\n    $.on(this.group, \"dblclick\", (e) => {\r\n      if (this.action_completed) {\r\n        // just finished a move action, wait for a few seconds\r\n        return;\r\n      }\r\n\r\n      this.gantt.trigger_event(\"click\", [this.task]);\r\n    });\r\n  }\r\n\r\n  show_popup() {\r\n    if (this.gantt.bar_being_dragged) return;\r\n\r\n    const start_date = date_utils.format(\r\n      this.task._start,\r\n      \"MMM D\",\r\n      this.gantt.options.language\r\n    );\r\n    const end_date = date_utils.format(\r\n      date_utils.add(this.task._end, -1, \"second\"),\r\n      \"MMM D\",\r\n      this.gantt.options.language\r\n    );\r\n    const subtitle = start_date + \" - \" + end_date;\r\n\r\n    this.gantt.show_popup({\r\n      target_element: this.$bar,\r\n      title: this.task.name,\r\n      subtitle: subtitle,\r\n      task: this.task,\r\n    });\r\n  }\r\n\r\n  update_bar_position({ x = null, width = null }) {\r\n    const bar = this.$bar;\r\n    if (x) {\r\n      // get all x values of parent task\r\n      const xs = this.task.dependencies.map((dep) => {\r\n        return this.gantt.get_bar(dep).$bar.getX();\r\n      });\r\n      // child task must not go before parent\r\n      const valid_x = xs.reduce((prev, curr) => {\r\n        return x >= curr;\r\n      }, x);\r\n      if (!valid_x) {\r\n        width = null;\r\n        return;\r\n      }\r\n      this.update_attr(bar, \"x\", x);\r\n    }\r\n    if (width && width >= 16) { //&& width >= this.gantt.options.column_width) {\r\n      this.update_attr(bar, \"width\", width);\r\n    }\r\n    this.update_label_position();\r\n    this.update_handle_position();\r\n    this.update_progressbar_position();\r\n    this.update_arrow_position();\r\n  }\r\n\r\n  date_changed() {\r\n    let changed = false;\r\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n    if (Number(this.task._start) !== Number(new_start_date)) {\r\n      changed = true;\r\n      this.task._start = new_start_date;\r\n    }\r\n\r\n    if (Number(this.task._end) !== Number(new_end_date)) {\r\n      changed = true;\r\n      this.task._end = new_end_date;\r\n    }\r\n\r\n    if (!changed) return;\r\n\r\n    this.gantt.trigger_event(\"date_change\", [\r\n      this.task,\r\n      new_start_date,\r\n      date_utils.add(new_end_date, -1, \"second\"),\r\n    ]);\r\n  }\r\n\r\n  progress_changed() {\r\n    const new_progress = this.compute_progress();\r\n    this.task.progress = new_progress;\r\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\r\n  }\r\n\r\n  set_action_completed() {\r\n    this.action_completed = true;\r\n    setTimeout(() => (this.action_completed = false), 1000);\r\n  }\r\n\r\n  compute_start_end_date() {\r\n    const bar = this.$bar;\r\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n    const new_start_date = date_utils.add(\r\n      this.gantt.gantt_start,\r\n      x_in_units * this.gantt.options.step,\r\n      \"hour\"\r\n    );\r\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n    const new_end_date = date_utils.add(\r\n      new_start_date,\r\n      width_in_units * this.gantt.options.step,\r\n      \"hour\"\r\n    );\r\n\r\n    return { new_start_date, new_end_date };\r\n  }\r\n\r\n  compute_progress() {\r\n    const progress =\r\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n    return parseInt(progress, 10);\r\n  }\r\n\r\n  compute_x() {\r\n    const { step, column_width } = this.gantt.options;\r\n    const task_start = this.task._start;\r\n    const gantt_start = this.gantt.gantt_start;\r\n\r\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\r\n    let x = (diff / step) * column_width;\r\n\r\n    if (this.gantt.view_is(\"Month\")) {\r\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\r\n      x = (diff * column_width) / 30;\r\n    }\r\n    return x;\r\n  }\r\n\r\n  compute_y() {\r\n    return (\r\n      this.gantt.options.header_height +\r\n      this.gantt.options.padding +\r\n      this.task._index * (this.height + this.gantt.options.padding)\r\n    );\r\n  }\r\n\r\n  get_snap_position(dx) {\r\n    let odx = dx,\r\n      rem,\r\n      position;\r\n\r\n    if (this.gantt.view_is(\"Week\")) {\r\n      rem = dx % (this.gantt.options.column_width / 7);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.gantt.options.column_width / 14\r\n          ? 0\r\n          : this.gantt.options.column_width / 7);\r\n    } else if (this.gantt.view_is(\"Month\")) {\r\n      rem = dx % (this.gantt.options.column_width / 30);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.gantt.options.column_width / 60\r\n          ? 0\r\n          : this.gantt.options.column_width / 30);\r\n    } else {\r\n      rem = dx % this.gantt.options.column_width;\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.gantt.options.column_width / 2\r\n          ? 0\r\n          : this.gantt.options.column_width);\r\n    }\r\n    return position;\r\n  }\r\n\r\n  update_attr(element, attr, value) {\r\n    value = +value;\r\n    if (!isNaN(value)) {\r\n      element.setAttribute(attr, value);\r\n    }\r\n    return element;\r\n  }\r\n\r\n  update_progressbar_position() {\r\n    if (this.invalid) return;\r\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\r\n    this.$bar_progress.setAttribute(\r\n      \"width\",\r\n      this.$bar.getWidth() * ((this.task.progress || 0) / 100)\r\n    );\r\n  }\r\n\r\n  update_label_position() {\r\n    if (this.options.enable_labels) {\r\n      const bar = this.$bar,\r\n        label = this.group.querySelector(\".bar-label\");\r\n\r\n      if (label.getBBox().width > bar.getWidth()) {\r\n        label.classList.add(\"big\");\r\n        label.setAttribute(\"x\", bar.getX() + bar.getWidth() + 5);\r\n      } else {\r\n        label.classList.remove(\"big\");\r\n        label.setAttribute(\"x\", bar.getX() + bar.getWidth() / 2);\r\n      }\r\n    }\r\n  }\r\n\r\n  update_handle_position() {\r\n    if (this.invalid) return;\r\n    const bar = this.$bar;\r\n    this.handle_group\r\n      .querySelector(\".handle.left\")\r\n      .setAttribute(\"x\", bar.getX() + 1);\r\n    this.handle_group\r\n      .querySelector(\".handle.right\")\r\n      .setAttribute(\"x\", bar.getEndX() - 9);\r\n    const handle = this.group.querySelector(\".handle.progress\");\r\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\r\n  }\r\n\r\n  update_arrow_position() {\r\n    this.arrows = this.arrows || [];\r\n    for (let arrow of this.arrows) {\r\n      arrow.update();\r\n    }\r\n  }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n  var getType = {};\r\n  return (\r\n    functionToCheck &&\r\n    getType.toString.call(functionToCheck) === \"[object Function]\"\r\n  );\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 10) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n    }\r\n}\r\n","import Arrow from \"./arrow\";\r\nimport Bar from \"./bar\";\r\nimport date_utils from \"./date_utils\";\r\nimport Popup from \"./popup\";\r\nimport { $, createSVG } from \"./svg_utils\";\r\n\r\nimport \"./gantt.scss\";\r\n\r\nconst VIEW_MODE = {\r\n  QUARTER_DAY: \"Quarter Day\",\r\n  HALF_DAY: \"Half Day\",\r\n  DAY: \"Day\",\r\n  WEEK: \"Week\",\r\n  MONTH: \"Month\",\r\n  YEAR: \"Year\",\r\n};\r\n\r\nexport default class Gantt {\r\n  constructor(wrapper, tasks, options) {\r\n    this.setup_options(options);\r\n    this.setup_wrapper(wrapper);\r\n    this.setup_categories(tasks);    \r\n    this.setup_tasks(tasks);\r\n    // initialize with default view mode\r\n    this.change_view_mode();\r\n    this.bind_events();\r\n  }\r\n\r\n  setup_wrapper(element) {\r\n    let svg_element, wrapper_element;\r\n\r\n    // CSS Selector is passed\r\n    if (typeof element === \"string\") {\r\n      element = document.querySelector(element);\r\n    }\r\n\r\n    // get the SVGElement\r\n    if (element instanceof HTMLElement) {\r\n      wrapper_element = element;\r\n      svg_element = element.querySelector(\"svg\");\r\n    } else if (element instanceof SVGElement) {\r\n      svg_element = element;\r\n    } else {\r\n      throw new TypeError(\r\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\r\n          \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n      );\r\n    }\r\n\r\n    // svg element\r\n    if (!svg_element) {\r\n      // create it\r\n      this.$svg = createSVG(\"svg\", {\r\n        append_to: wrapper_element,\r\n        class: \"gantt\",\r\n      });\r\n    } else {\r\n      this.$svg = svg_element;\r\n      this.$svg.classList.add(\"gantt\");\r\n    }\r\n\r\n    this.$categoriesContainer = document.createElement(\"div\");\r\n    this.$categoriesContainer.classList.add(\"gantt-categories-container\");\r\n\r\n    const $containerWrapper = document.createElement(\"div\");\r\n    $containerWrapper.classList.add(\"gantt-container-wrapper\");\r\n\r\n    // wrapper element\r\n    this.$container = document.createElement(\"div\");\r\n    this.$container.classList.add(\"gantt-container\");\r\n    $containerWrapper.appendChild(this.$container);\r\n\r\n    const parent_element = this.$svg.parentElement;\r\n    parent_element.classList.add(\"gantt-main-container\");\r\n\r\n    parent_element.appendChild(this.$categoriesContainer);\r\n    parent_element.appendChild($containerWrapper);\r\n\r\n    this.$container.appendChild(this.$svg);\r\n\r\n    // popup wrapper\r\n    this.popup_wrapper = document.createElement(\"div\");\r\n    this.popup_wrapper.classList.add(\"popup-wrapper\");\r\n    if (this.options.popup_class) {\r\n      this.popup_wrapper.classList.add(this.options.popup_class);\r\n    }\r\n    this.$container.appendChild(this.popup_wrapper);\r\n  }\r\n\r\n  setup_options(options) {\r\n    const default_options = {\r\n      header_height: 50,\r\n      column_width: 30,\r\n      step: 24,\r\n      view_modes: [...Object.values(VIEW_MODE)],\r\n      bar_height: 20,\r\n      bar_corner_radius: 3,\r\n      arrow_curve: 5,\r\n      padding: 18,\r\n      view_mode: \"Day\",\r\n      date_format: \"YYYY-MM-DD\",\r\n      popup_trigger: \"click\",\r\n      custom_popup_html: null,\r\n      language: \"en\",\r\n      enable_labels: true,\r\n      category_class: null,\r\n      popup_class: null,\r\n    };\r\n    this.options = Object.assign({}, default_options, options);\r\n  }\r\n\r\n  setup_tasks(tasks) {\r\n    this.tasks = [];\r\n    // prepare tasks\r\n    tasks.forEach((rawTask, i) => {\r\n      if (rawTask.items?.length) {\r\n        rawTask.items.forEach((item) => {\r\n          const task = this.setup_task(item, i);\r\n          //task._secondary = j > 0;\r\n          this.tasks.push(task);\r\n        });\r\n      }\r\n    });\r\n\r\n    this.setup_dependencies();\r\n  }\r\n\r\n  setup_task(task, index) {\r\n    // convert to Date objects\r\n    task._start = date_utils.parse(task.start);\r\n    task._end = date_utils.parse(task.end);\r\n\r\n    // make task invalid if duration too large\r\n    if (date_utils.diff(task._end, task._start, \"year\") > 10) {\r\n      task.end = null;\r\n    }\r\n\r\n    // cache index\r\n    task._index = index;\r\n\r\n    // invalid dates\r\n    if (!task.start && !task.end) {\r\n      const today = date_utils.today();\r\n      task._start = today;\r\n      task._end = date_utils.add(today, 2, \"day\");\r\n    }\r\n\r\n    if (!task.start && task.end) {\r\n      task._start = date_utils.add(task._end, -2, \"day\");\r\n    }\r\n\r\n    if (task.start && !task.end) {\r\n      task._end = date_utils.add(task._start, 2, \"day\");\r\n    }\r\n\r\n    // if hours is not set, assume the last day is full day\r\n    // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n    const task_end_values = date_utils.get_date_values(task._end);\r\n    if (task_end_values.slice(3).every((d) => d === 0)) {\r\n      task._end = date_utils.add(task._end, 24, \"hour\");\r\n    }\r\n\r\n    // invalid flag\r\n    if (!task.start || !task.end) {\r\n      task.invalid = true;\r\n    }\r\n\r\n    // dependencies\r\n    if (typeof task.dependencies === \"string\" || !task.dependencies) {\r\n      let deps = [];\r\n      if (task.dependencies) {\r\n        deps = task.dependencies\r\n          .split(\",\")\r\n          .map((d) => d.trim())\r\n          .filter((d) => d);\r\n      }\r\n      task.dependencies = deps;\r\n    }\r\n\r\n    // uids\r\n    if (!task.id) {\r\n      task.id = generate_id(task);\r\n    }\r\n\r\n    return task;\r\n  }\r\n\r\n  setup_categories(tasks) {\r\n    this.categories = tasks.map((t) => t.name);\r\n  }\r\n\r\n  setup_dependencies() {\r\n    this.dependency_map = {};\r\n    for (let t of this.tasks) {\r\n      for (let d of t.dependencies) {\r\n        this.dependency_map[d] = this.dependency_map[d] || [];\r\n        this.dependency_map[d].push(t.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  refresh(tasks) {\r\n    this.setup_tasks(tasks);\r\n    this.change_view_mode();\r\n  }\r\n\r\n  change_view_mode(mode = this.options.view_mode) {\r\n    this.update_view_scale(mode);\r\n    this.setup_dates();\r\n    this.render();\r\n    // fire viewmode_change event\r\n    this.trigger_event(\"view_change\", [mode]);\r\n  }\r\n\r\n  update_view_scale(view_mode) {\r\n    this.options.view_mode = view_mode;\r\n\r\n    if (view_mode === VIEW_MODE.DAY) {\r\n      this.options.step = 24;\r\n      this.options.column_width = 38;\r\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n      this.options.step = 24 / 2;\r\n      this.options.column_width = 38;\r\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n      this.options.step = 24 / 4;\r\n      this.options.column_width = 38;\r\n    } else if (view_mode === VIEW_MODE.WEEK) {\r\n      this.options.step = 24 * 7;\r\n      this.options.column_width = 140;\r\n    } else if (view_mode === VIEW_MODE.MONTH) {\r\n      this.options.step = 24 * 30;\r\n      this.options.column_width = 120;\r\n    } else if (view_mode === VIEW_MODE.YEAR) {\r\n      this.options.step = 24 * 365;\r\n      this.options.column_width = 120;\r\n    }\r\n  }\r\n\r\n  setup_dates() {\r\n    this.setup_gantt_dates();\r\n    this.setup_date_values();\r\n  }\r\n\r\n  setup_gantt_dates() {\r\n    this.gantt_start = this.gantt_end = null;\r\n\r\n    for (let task of this.tasks) {\r\n      // set global start and end date\r\n      if (!this.gantt_start || task._start < this.gantt_start) {\r\n        this.gantt_start = task._start;\r\n      }\r\n      if (!this.gantt_end || task._end > this.gantt_end) {\r\n        this.gantt_end = task._end;\r\n      }\r\n    }\r\n\r\n    this.gantt_start = date_utils.start_of(this.gantt_start, \"day\");\r\n    this.gantt_end = date_utils.start_of(this.gantt_end, \"day\");\r\n\r\n    // add date padding on both sides\r\n    if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n      this.gantt_start = date_utils.add(this.gantt_start, -7, \"day\");\r\n      this.gantt_end = date_utils.add(this.gantt_end, 7, \"day\");\r\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n      this.gantt_start = date_utils.start_of(this.gantt_start, \"year\");\r\n      this.gantt_end = date_utils.add(this.gantt_end, 1, \"year\");\r\n    } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n      this.gantt_start = date_utils.add(this.gantt_start, -2, \"year\");\r\n      this.gantt_end = date_utils.add(this.gantt_end, 2, \"year\");\r\n    } else {\r\n      this.gantt_start = date_utils.add(this.gantt_start, -1, \"month\");\r\n      this.gantt_end = date_utils.add(this.gantt_end, 1, \"month\");\r\n    }\r\n  }\r\n\r\n  setup_date_values() {\r\n    this.dates = [];\r\n    let cur_date = null;\r\n\r\n    while (cur_date === null || cur_date < this.gantt_end) {\r\n      if (!cur_date) {\r\n        cur_date = date_utils.clone(this.gantt_start);\r\n      } else {\r\n        if (this.view_is(VIEW_MODE.YEAR)) {\r\n          cur_date = date_utils.add(cur_date, 1, \"year\");\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n          cur_date = date_utils.add(cur_date, 1, \"month\");\r\n        } else {\r\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\r\n        }\r\n      }\r\n      this.dates.push(cur_date);\r\n    }\r\n  }\r\n\r\n  bind_events() {\r\n    this.bind_grid_click();\r\n    this.bind_bar_events();\r\n  }\r\n\r\n  render() {\r\n    this.clear();\r\n    this.setup_layers();\r\n    this.make_categories();\r\n    this.make_grid();\r\n    this.make_dates();\r\n    this.make_bars();\r\n    this.make_arrows();\r\n    this.map_arrows_on_bars();\r\n    this.set_width();\r\n    this.set_scroll_position();\r\n  }\r\n\r\n  setup_layers() {\r\n    this.layers = {};\r\n    const layers = [\"grid\", \"date\", \"arrow\", \"progress\", \"bar\", \"details\"];\r\n    // make group layers\r\n    for (let layer of layers) {\r\n      this.layers[layer] = createSVG(\"g\", {\r\n        class: layer,\r\n        append_to: this.$svg,\r\n      });\r\n    }\r\n  }\r\n\r\n  make_grid() {\r\n    this.make_grid_background();\r\n    this.make_grid_rows();\r\n    this.make_grid_header();\r\n    this.make_grid_ticks();\r\n    this.make_grid_highlights();\r\n  }\r\n\r\n  make_grid_background() {\r\n    const grid_width = this.dates.length * this.options.column_width;\r\n    const grid_height =\r\n      this.options.header_height +\r\n      this.options.padding +\r\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\r\n\r\n    createSVG(\"rect\", {\r\n      x: 0,\r\n      y: 0,\r\n      width: grid_width,\r\n      height: grid_height,\r\n      class: \"grid-background\",\r\n      append_to: this.layers.grid,\r\n    });\r\n\r\n    $.attr(this.$svg, {\r\n      height: grid_height + this.options.padding + 100,\r\n      width: \"100%\",\r\n    });\r\n  }\r\n\r\n  make_grid_rows() {\r\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\r\n    const lines_layer = createSVG(\"g\", { append_to: this.layers.grid });\r\n\r\n    const row_width = this.dates.length * this.options.column_width;\r\n    const row_height = this.options.bar_height + this.options.padding;\r\n\r\n    let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n    for (let task of this.categories) {\r\n      createSVG(\"rect\", {\r\n        x: 0,\r\n        y: row_y,\r\n        width: row_width,\r\n        height: row_height,\r\n        class: \"grid-row\",\r\n        append_to: rows_layer,\r\n      });\r\n\r\n      createSVG(\"line\", {\r\n        x1: 0,\r\n        y1: row_y + row_height,\r\n        x2: row_width,\r\n        y2: row_y + row_height,\r\n        class: \"row-line\",\r\n        append_to: lines_layer,\r\n      });\r\n\r\n      row_y += this.options.bar_height + this.options.padding;\r\n    }\r\n  }\r\n\r\n  make_grid_header() {\r\n    const header_width = this.dates.length * this.options.column_width;\r\n    const header_height = this.options.header_height + 10;\r\n    createSVG(\"rect\", {\r\n      x: 0,\r\n      y: 0,\r\n      width: header_width,\r\n      height: header_height,\r\n      class: \"grid-header\",\r\n      append_to: this.layers.grid,\r\n    });\r\n  }\r\n\r\n  make_grid_ticks() {\r\n    let tick_x = 0;\r\n    let tick_y = this.options.header_height + this.options.padding / 2;\r\n    let tick_height =\r\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\r\n\r\n    for (let date of this.dates) {\r\n      let tick_class = \"tick\";\r\n      // thick tick for monday\r\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n        tick_class += \" thick\";\r\n      }\r\n      // thick tick for first week\r\n      if (\r\n        this.view_is(VIEW_MODE.WEEK) &&\r\n        date.getDate() >= 1 &&\r\n        date.getDate() < 8\r\n      ) {\r\n        tick_class += \" thick\";\r\n      }\r\n      // thick ticks for quarters\r\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n        tick_class += \" thick\";\r\n      }\r\n\r\n      createSVG(\"path\", {\r\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n        class: tick_class,\r\n        append_to: this.layers.grid,\r\n      });\r\n\r\n      if (this.view_is(VIEW_MODE.MONTH)) {\r\n        tick_x +=\r\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\r\n      } else {\r\n        tick_x += this.options.column_width;\r\n      }\r\n    }\r\n  }\r\n\r\n  make_grid_highlights() {\r\n    // highlight today's date\r\n    if (this.view_is(VIEW_MODE.DAY)) {\r\n      const x =\r\n        (date_utils.diff(date_utils.today(), this.gantt_start, \"hour\") /\r\n          this.options.step) *\r\n        this.options.column_width;\r\n      const y = 0;\r\n\r\n      const width = this.options.column_width;\r\n      const height =\r\n        (this.options.bar_height + this.options.padding) * this.tasks.length +\r\n        this.options.header_height +\r\n        this.options.padding / 2;\r\n\r\n      createSVG(\"rect\", {\r\n        x,\r\n        y,\r\n        width,\r\n        height,\r\n        class: \"today-highlight\",\r\n        append_to: this.layers.grid,\r\n      });\r\n    }\r\n  }\r\n\r\n  make_dates() {\r\n    for (let date of this.get_dates_to_draw()) {\r\n      createSVG(\"text\", {\r\n        x: date.lower_x,\r\n        y: date.lower_y,\r\n        innerHTML: date.lower_text,\r\n        class: \"lower-text\",\r\n        append_to: this.layers.date,\r\n      });\r\n\r\n      if (date.upper_text) {\r\n        const $upper_text = createSVG(\"text\", {\r\n          x: date.upper_x,\r\n          y: date.upper_y,\r\n          innerHTML: date.upper_text,\r\n          class: \"upper-text\",\r\n          append_to: this.layers.date,\r\n        });\r\n\r\n        // remove out-of-bound dates\r\n        if ($upper_text.getBBox().x2 > this.layers.grid.getBBox().width) {\r\n          $upper_text.remove();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  get_dates_to_draw() {\r\n    let last_date = null;\r\n    const dates = this.dates.map((date, i) => {\r\n      const d = this.get_date_info(date, last_date, i);\r\n      last_date = date;\r\n      return d;\r\n    });\r\n    return dates;\r\n  }\r\n\r\n  get_date_info(date, last_date, i) {\r\n    if (!last_date) {\r\n      last_date = date_utils.add(date, 1, \"year\");\r\n    }\r\n    const date_text = {\r\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\r\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\r\n      Day_lower:\r\n        date.getDate() !== last_date.getDate()\r\n          ? date_utils.format(date, \"D\", this.options.language)\r\n          : \"\",\r\n      Week_lower:\r\n        date.getMonth() !== last_date.getMonth()\r\n          ? date_utils.format(date, \"D MMM\", this.options.language)\r\n          : date_utils.format(date, \"D\", this.options.language),\r\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\r\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\r\n      \"Quarter Day_upper\":\r\n        date.getDate() !== last_date.getDate()\r\n          ? date_utils.format(date, \"D MMM\", this.options.language)\r\n          : \"\",\r\n      \"Half Day_upper\":\r\n        date.getDate() !== last_date.getDate()\r\n          ? date.getMonth() !== last_date.getMonth()\r\n            ? date_utils.format(date, \"D MMM\", this.options.language)\r\n            : date_utils.format(date, \"D\", this.options.language)\r\n          : \"\",\r\n      Day_upper:\r\n        date.getMonth() !== last_date.getMonth()\r\n          ? date_utils.format(date, \"MMMM\", this.options.language)\r\n          : \"\",\r\n      Week_upper:\r\n        date.getMonth() !== last_date.getMonth()\r\n          ? date_utils.format(date, \"MMMM\", this.options.language)\r\n          : \"\",\r\n      Month_upper:\r\n        date.getFullYear() !== last_date.getFullYear()\r\n          ? date_utils.format(date, \"YYYY\", this.options.language)\r\n          : \"\",\r\n      Year_upper:\r\n        date.getFullYear() !== last_date.getFullYear()\r\n          ? date_utils.format(date, \"YYYY\", this.options.language)\r\n          : \"\",\r\n    };\r\n\r\n    const base_pos = {\r\n      x: i * this.options.column_width,\r\n      lower_y: this.options.header_height,\r\n      upper_y: this.options.header_height - 25,\r\n    };\r\n\r\n    const x_pos = {\r\n      \"Quarter Day_lower\": (this.options.column_width * 4) / 2,\r\n      \"Quarter Day_upper\": 0,\r\n      \"Half Day_lower\": (this.options.column_width * 2) / 2,\r\n      \"Half Day_upper\": 0,\r\n      Day_lower: this.options.column_width / 2,\r\n      Day_upper: (this.options.column_width * 30) / 2,\r\n      Week_lower: 0,\r\n      Week_upper: (this.options.column_width * 4) / 2,\r\n      Month_lower: this.options.column_width / 2,\r\n      Month_upper: (this.options.column_width * 12) / 2,\r\n      Year_lower: this.options.column_width / 2,\r\n      Year_upper: (this.options.column_width * 30) / 2,\r\n    };\r\n\r\n    return {\r\n      upper_text: date_text[`${this.options.view_mode}_upper`],\r\n      lower_text: date_text[`${this.options.view_mode}_lower`],\r\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n      upper_y: base_pos.upper_y,\r\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n      lower_y: base_pos.lower_y,\r\n    };\r\n  }\r\n\r\n  make_bars() {\r\n    this.bars = [];\r\n    this.tasks.forEach((task) => {\r\n      const bar = new Bar(this, task, this.options);\r\n      this.layers.bar.appendChild(bar.group);\r\n      this.bars.push(bar);\r\n    });\r\n  }\r\n\r\n  make_categories() {\r\n    this.categories.forEach((category) => {\r\n      const $categoryEl = this.createDiv(\r\n        this.$categoriesContainer,\r\n        \"gantt-category\",\r\n        \"gantt-category-item\",\r\n        this.options.category_class\r\n      );\r\n\r\n      this.createDiv($categoryEl, \"gantt-category-label\").innerText = category;\r\n    });\r\n  }\r\n\r\n  make_arrows() {\r\n    this.arrows = [];\r\n    for (let task of this.tasks) {\r\n      let arrows = [];\r\n      arrows = task.dependencies\r\n        .map((task_id) => {\r\n          const dependency = this.get_task(task_id);\r\n          if (!dependency) return;\r\n          const arrow = new Arrow(\r\n            this,\r\n            this.bars[dependency._index], // from_task\r\n            this.bars[task._index] // to_task\r\n          );\r\n          this.layers.arrow.appendChild(arrow.element);\r\n          return arrow;\r\n        })\r\n        .filter(Boolean); // filter falsy values\r\n      this.arrows = this.arrows.concat(arrows);\r\n    }\r\n  }\r\n\r\n  map_arrows_on_bars() {\r\n    for (let bar of this.bars) {\r\n      bar.arrows = this.arrows.filter((arrow) => {\r\n        return (\r\n          arrow.from_task.task.id === bar.task.id ||\r\n          arrow.to_task.task.id === bar.task.id\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  set_width() {\r\n    const cur_width = this.$svg.getBoundingClientRect().width;\r\n    const actual_width = this.$svg\r\n      .querySelector(\".grid .grid-row\")\r\n      .getAttribute(\"width\");\r\n    if (cur_width < actual_width) {\r\n      this.$svg.setAttribute(\"width\", actual_width);\r\n    }\r\n  }\r\n\r\n  set_scroll_position() {\r\n    const parent_element = this.$svg.parentElement;\r\n    if (!parent_element) return;\r\n\r\n    const hours_before_first_task = date_utils.diff(\r\n      this.get_oldest_starting_date(),\r\n      this.gantt_start,\r\n      \"hour\"\r\n    );\r\n\r\n    const scroll_pos =\r\n      (hours_before_first_task / this.options.step) *\r\n        this.options.column_width -\r\n      this.options.column_width;\r\n\r\n    parent_element.scrollLeft = scroll_pos;\r\n  }\r\n\r\n  bind_grid_click() {\r\n    $.on(\r\n      this.$svg,\r\n      this.options.popup_trigger,\r\n      \".grid-row, .grid-header\",\r\n      () => {\r\n        this.unselect_all();\r\n        this.hide_popup();\r\n      }\r\n    );\r\n  }\r\n\r\n  bind_bar_events() {\r\n    let is_dragging = false;\r\n    let x_on_start = 0;\r\n    let y_on_start = 0;\r\n    let is_resizing_left = false;\r\n    let is_resizing_right = false;\r\n    let parent_bar_id = null;\r\n    let bars = []; // instanceof Bar\r\n    this.bar_being_dragged = null;\r\n\r\n    function action_in_progress() {\r\n      return is_dragging || is_resizing_left || is_resizing_right;\r\n    }\r\n\r\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\r\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\r\n\r\n      if (element.classList.contains(\"left\")) {\r\n        is_resizing_left = true;\r\n      } else if (element.classList.contains(\"right\")) {\r\n        is_resizing_right = true;\r\n      } else if (element.classList.contains(\"bar-wrapper\")) {\r\n        is_dragging = true;\r\n      }\r\n\r\n      bar_wrapper.classList.add(\"active\");\r\n\r\n      x_on_start = e.offsetX;\r\n      y_on_start = e.offsetY;\r\n\r\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\r\n      const ids = [\r\n        parent_bar_id,\r\n        ...this.get_all_dependent_tasks(parent_bar_id),\r\n      ];\r\n      bars = ids.map((id) => this.get_bar(id));\r\n\r\n      this.bar_being_dragged = parent_bar_id;\r\n\r\n      bars.forEach((bar) => {\r\n        const $bar = bar.$bar;\r\n        $bar.ox = $bar.getX();\r\n        $bar.oy = $bar.getY();\r\n        $bar.owidth = $bar.getWidth();\r\n        $bar.finaldx = 0;\r\n      });\r\n    });\r\n\r\n    $.on(this.$svg, \"mousemove\", (e) => {\r\n      if (!action_in_progress()) return;\r\n      const dx = e.offsetX - x_on_start;\r\n      const dy = e.offsetY - y_on_start;\r\n\r\n      bars.forEach((bar) => {\r\n        const $bar = bar.$bar;\r\n        $bar.finaldx = this.get_snap_position(dx);\r\n        this.hide_popup();\r\n        if (is_resizing_left) {\r\n          console.log(`$bar.owidth: ${$bar.owidth}`);\r\n          console.log(`$bar.finaldx: ${$bar.finaldx}`);\r\n          if (parent_bar_id === bar.task.id) {\r\n            bar.update_bar_position({\r\n              x: $bar.ox + $bar.finaldx,\r\n              width: $bar.owidth - $bar.finaldx,\r\n            });\r\n          } else {\r\n            bar.update_bar_position({\r\n              x: $bar.ox + $bar.finaldx,\r\n            });\r\n          }\r\n        } else if (is_resizing_right) {\r\n          if (parent_bar_id === bar.task.id) {\r\n            bar.update_bar_position({\r\n              width: $bar.owidth + $bar.finaldx,\r\n            });\r\n          }\r\n        } else if (is_dragging) {\r\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n        }\r\n      });\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      if (is_dragging || is_resizing_left || is_resizing_right) {\r\n        bars.forEach((bar) => bar.group.classList.remove(\"active\"));\r\n      }\r\n\r\n      is_dragging = false;\r\n      is_resizing_left = false;\r\n      is_resizing_right = false;\r\n    });\r\n\r\n    $.on(this.$svg, \"mouseup\", (e) => {\r\n      this.bar_being_dragged = null;\r\n      bars.forEach((bar) => {\r\n        const $bar = bar.$bar;\r\n        if (!$bar.finaldx) return;\r\n        bar.date_changed();\r\n        bar.set_action_completed();\r\n      });\r\n    });\r\n\r\n    this.bind_bar_progress();\r\n  }\r\n\r\n  bind_bar_progress() {\r\n    let x_on_start = 0;\r\n    let y_on_start = 0;\r\n    let is_resizing = null;\r\n    let bar = null;\r\n    let $bar_progress = null;\r\n    let $bar = null;\r\n\r\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\r\n      is_resizing = true;\r\n      x_on_start = e.offsetX;\r\n      y_on_start = e.offsetY;\r\n\r\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\r\n      const id = $bar_wrapper.getAttribute(\"data-id\");\r\n      bar = this.get_bar(id);\r\n\r\n      $bar_progress = bar.$bar_progress;\r\n      $bar = bar.$bar;\r\n\r\n      $bar_progress.finaldx = 0;\r\n      $bar_progress.owidth = $bar_progress.getWidth();\r\n      $bar_progress.min_dx = -$bar_progress.getWidth();\r\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n    });\r\n\r\n    $.on(this.$svg, \"mousemove\", (e) => {\r\n      if (!is_resizing) return;\r\n      let dx = e.offsetX - x_on_start;\r\n      let dy = e.offsetY - y_on_start;\r\n\r\n      if (dx > $bar_progress.max_dx) {\r\n        dx = $bar_progress.max_dx;\r\n      }\r\n      if (dx < $bar_progress.min_dx) {\r\n        dx = $bar_progress.min_dx;\r\n      }\r\n\r\n      const $handle = bar.$handle_progress;\r\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\r\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\r\n      $bar_progress.finaldx = dx;\r\n    });\r\n\r\n    $.on(this.$svg, \"mouseup\", () => {\r\n      is_resizing = false;\r\n      if (!($bar_progress && $bar_progress.finaldx)) return;\r\n      bar.progress_changed();\r\n      bar.set_action_completed();\r\n    });\r\n  }\r\n\r\n  get_all_dependent_tasks(task_id) {\r\n    let out = [];\r\n    let to_process = [task_id];\r\n    while (to_process.length) {\r\n      const deps = to_process.reduce((acc, curr) => {\r\n        acc = acc.concat(this.dependency_map[curr]);\r\n        return acc;\r\n      }, []);\r\n\r\n      out = out.concat(deps);\r\n      to_process = deps.filter((d) => !to_process.includes(d));\r\n    }\r\n\r\n    return out.filter(Boolean);\r\n  }\r\n\r\n  get_snap_position(dx) {\r\n    let odx = dx,\r\n      rem,\r\n      position;\r\n\r\n    if (this.view_is(VIEW_MODE.WEEK)) {\r\n      rem = dx % (this.options.column_width / 7);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.options.column_width / 14\r\n          ? 0\r\n          : this.options.column_width / 7);\r\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n      rem = dx % (this.options.column_width / 30);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.options.column_width / 60\r\n          ? 0\r\n          : this.options.column_width / 30);\r\n    } else {\r\n      rem = dx % this.options.column_width;\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\r\n    }\r\n    return position;\r\n  }\r\n\r\n  unselect_all() {\r\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\r\n      el.classList.remove(\"active\");\r\n    });\r\n  }\r\n\r\n  view_is(modes) {\r\n    if (typeof modes === \"string\") {\r\n      return this.options.view_mode === modes;\r\n    }\r\n\r\n    if (Array.isArray(modes)) {\r\n      return modes.some((mode) => this.options.view_mode === mode);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  get_task(id) {\r\n    return this.tasks.find((task) => {\r\n      return task.id === id;\r\n    });\r\n  }\r\n\r\n  get_bar(id) {\r\n    return this.bars.find((bar) => {\r\n      return bar.task.id === id;\r\n    });\r\n  }\r\n\r\n  show_popup(options) {\r\n    if (!this.popup) {\r\n      this.popup = new Popup(\r\n        this.popup_wrapper,\r\n        this.options.custom_popup_html\r\n      );\r\n    }\r\n    this.popup.show(options);\r\n  }\r\n\r\n  hide_popup() {\r\n    this.popup && this.popup.hide();\r\n  }\r\n\r\n  trigger_event(event, args) {\r\n    if (this.options[\"on_\" + event]) {\r\n      this.options[\"on_\" + event].apply(null, args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the oldest starting date from the list of tasks\r\n   *\r\n   * @returns Date\r\n   * @memberof Gantt\r\n   */\r\n  get_oldest_starting_date() {\r\n    return this.tasks\r\n      .map((task) => task._start)\r\n      .reduce((prev_date, cur_date) =>\r\n        cur_date <= prev_date ? cur_date : prev_date\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Clear all elements from the parent svg element\r\n   *\r\n   * @memberof Gantt\r\n   */\r\n  clear() {\r\n    this.$svg.innerHTML = \"\";\r\n  }\r\n\r\n  createElement(elementTagName, parrent, ...classNames) {\r\n    const el = document.createElement(elementTagName);\r\n    if (classNames?.length)\r\n      classNames\r\n        .filter((t) => !!t)\r\n        .forEach((className) => el.classList.add(className));\r\n    parrent.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  createDiv(parrent, ...classNames) {\r\n    return this.createElement(\"div\", parrent, ...classNames);\r\n  }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","values","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","split","forEach","addEventListener","e","delegatedTarget","target","closest","call","this","matches","parentNode","value","getAttribute","key","Arrow","constructor","gantt","from_task","to_task","calculate_path","draw","start_x","$bar","getX","getWidth","condition","options","padding","start_y","header_height","bar_height","task","_index","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","getY","getHeight","left","d","id","update","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","includes","replace","push","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","Bar","enable_labels","set_defaults","prepare","action_completed","prepare_values","prepare_helpers","invalid","height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","bar_group","handle_group","SVGElement","prototype","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_options","setup_wrapper","setup_categories","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$categoriesContainer","createElement","$containerWrapper","$container","parent_element","parentElement","popup_wrapper","popup_class","default_options","view_modes","view_mode","date_format","custom_popup_html","category_class","assign","rawTask","items","item","setup_task","setup_dependencies","index","start","end","every","deps","trim","filter","random","toString","generate_id","categories","t","dependency_map","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_categories","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","category","$categoryEl","createDiv","innerText","task_id","dependency","get_task","Boolean","cur_width","actual_width","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","console","log","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date","elementTagName","parrent","classNames","className"],"mappings":"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"}